services:
    # =========================
    # Main PHP-FPM service
    # =========================
    app:
        build:
            context: .
            dockerfile: docker/php/DockerFile
        image: ${APP_IMAGE_NAME}
        container_name: ${APP_SERVICE_NAME}
        restart: always
        working_dir: /var/www/
        volumes:
            - ./:/var/www/
            - ./docker/php/xdebug/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
            - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
        environment:
            # Environment variables for MySQL database
            - MYSQL_HOST=${MYSQL_HOST}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            # Environment variables for PostgreSQL database (optional)
            # - POSTGRES_HOST=${POSTGRES_CONTAINER_NAME}
            # - POSTGRES_DB=${POSTGRES_DB}
            # - POSTGRES_USER=${POSTGRES_USER}
            # - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

    # =========================
    # NGINX (Webserver)
    # =========================
    nginx:
        image: nginx:1.28
        container_name: ${NGINX_SERVICE_NAME}
        restart: always
        ports:
            - "${NGINX_PORT}:80"
            - "${NGINX_SSL_PORT}:443"
        volumes:
          - ./:/var/www
          - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
          - ./docker/nginx/certs:/etc/nginx/certs

    # =========================
    # MySQL (optional)
    # The following blocks if you want to use MySQL and phpMyAdmin
    # Comment or uncomment if you want to use MySQL or not
    # =========================

    mysql:
        image: mysql:8.0
        container_name: ${MYSQL_CONTAINER_NAME}
        volumes:
          - ${MYSQL_DATA_VOLUME}:/var/lib/mysql
          - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
        ports:
            - "${MYSQL_PORT}:3306"
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}

    # =========================
    # phpMyAdmin (optional)
    # Uncomment this block if you want to use phpMyAdmin for MySQL
    # =========================
    phpmyadmin:
        image: phpmyadmin:5.2.2-apache
        container_name: ${PHPMYADMIN_SERVICE_NAME}
        restart: always
        ports:
            - "${PHPMYADMIN_PORT}:80"
        environment:
            PMA_HOST: mysql
            PMA_USER: ${MYSQL_USER}
            PMA_PASSWORD: ${MYSQL_PASSWORD}
        depends_on:
            - mysql

    # # =========================
    # # MySQL Backup (optional)
    # # Uncomment this block if you want automatic MySQL backups
    # # =========================
    # mysql-backup:
    #     image: fradelg/mysql-cron-backup
    #     container_name: ${MYSQL_BACKUP_CONTAINER_NAME}
    #     restart: always
    #     environment:
    #         - MYSQL_HOST=mysql
    #         - MYSQL_USER=${MYSQL_USER}
    #         - MYSQL_PASS=${MYSQL_PASSWORD}
    #         - MYSQL_DB=${MYSQL_DATABASE}
    #         - CRON_TIME=0 17 * * * # Daily at 17:00
    #     volumes:
    #         - ./docker/mysql/backups:/backup
    #     depends_on:
    #         - mysql

    # =========================
    # PostgreSQL (optional)
    # The following blocks if you want to use PostgreSQL and pgAdmin
    # Comment or uncomment if you want to use PostgreSQL or not
    # =========================

    # postgresql:
    #     image: postgres:16
    #     container_name: ${POSTGRES_CONTAINER_NAME}
    #     restart: unless-stopped
    #     environment:
    #         POSTGRES_DB: ${POSTGRES_DB}
    #         POSTGRES_USER: ${POSTGRES_USER}
    #         POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    #     volumes:
    #         - ${POSTGRES_DATA_VOLUME}:/var/lib/postgresql/data
    #         # Uncomment the following line if you want to initialize the database with an SQL script
    #         - ./docker/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    #     ports:
    #         - "${POSTGRES_PORT}:5432"

    # # =========================
    # # pgAdmin (optional)
    # # Uncomment this block if you want to use pgAdmin for PostgreSQL
    # # =========================
    # pgadmin:
    #     image: dpage/pgadmin4
    #     container_name: ${PGADMIN_SERVICE_NAME}
    #     restart: always
    #     environment:
    #         PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
    #         PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    #     ports:
    #         - "${PGADMIN_PORT}:80"
    #     depends_on:
    #         - postgresql
    #     volumes:
    #         - ./docker/postgresql/pgadmin:/var/lib/pgadmin

    # # =========================
    # # PostgreSQL Backup (optional)
    # # Uncomment this block if you want automatic PostgreSQL backups
    # # =========================
    # postgresql-backup:
    #     image: prodrigestivill/postgres-backup-local:17
    #     container_name: ${POSTGRES_BACKUP_CONTAINER_NAME}
    #     restart: always
    #     environment:
    #         - POSTGRES_HOST=postgresql
    #         - POSTGRES_DB=${POSTGRES_DB}
    #         - POSTGRES_USER=${POSTGRES_USER}
    #         - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    #         - SCHEDULE=0 17 * * * # Daily at 17:00
    #     volumes:
    #         - ./docker/postgresql/backups:/backups
    #     depends_on:
    #         - postgresql

volumes:
    my_project_nginx_mysqldata:
        driver: local
    # my_project_nginx_postgresqldata:
    #     driver: local

# Uncomment if you want to use an external network to share between services or connect to an external database
# networks:
#   default:
#     name: my_project_network_nginx
#     external: true
